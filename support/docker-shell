#!/bin/bash
#
# Copyright 2023-2024 Gaël PORTAY
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#

if [[ "$1" == "docker-cli-plugin-metadata" ]]
then
	cat <<EOF
{
	"SchemaVersion":"0.1.0",
	"Vendor":"Gaël PORTAY",
	"Version":"$(dosh --version)",
	"ShortDescription":"Run a shell as user in a container and bind mount cwd.",
	"URL":"https://www.portay.io/dosh/"
}
EOF
	exit 0
fi

if [[ "$1" == "__complete" ]]
then
	# Called as docker-shell __complete shell
	shift
	shift

	source /usr/share/bash-completion/bash_completion
	source /usr/share/bash-completion/completions/dosh

	COMP_LINE="dosh $*"
	COMP_WORDS=(dosh "$@")
	COMP_CWORD="$#"
	COMP_POINT="${#COMP_LINE}"
	_dosh
	echo "${COMPREPLY[@]}"
	exit 0
fi

if [[ "$1" == "help" ]]
then
	cat <<EOF
Usage:  docker shell    [OPTIONS] [SCRIPT_FILE  [ARGS...]]
        docker shell -c [OPTIONS] COMMAND [NAME [ARGS...]]
        docker shell -s [OPTIONS] [ARGS...]

Run a shell as user in a container and bind mount cwd.

docker-shell is a wrapper on top of dosh; For a more thorough description of
dosh, please refers to its help.

Options:
  --dockerfile string    Path to the Dockerfile to use.
  --context string       Path to the context to send to docker daemon.
  --no-auto-context      Disable automatic context sent to docker daemon.
  --no-extra-options     Disable extra options given to docker commands.
  --no-doshprofile       Disable read of ~/.dosh_profile.
  --no-doshrc            Disable read of ./doshrc.
  --directory string     Change to directory before doing anything else.
  --working-directory string
                         Working directory inside the container.
  --sudo                 Run docker with sudo.
  --root                 Run as root.
  --dind                 Run dosh in dosh.
  --groups               Run with host groups.
  --home                 Bind mount home directory.
  --mount-options string Set bind mount volume options.
                         For a more thorough description please refers to
                         docker-run(1) manual.
  --shell string         Set shell interpretor.
  --tag                  Print docker tag and exit.
  --ls                   List images and exit.
  --build-only           Build image if needed and exit.
  --build                Build image.
  --rebuild              Build image again, verbosely.
                         Equivalent to --build --verbose.
  --rmi                  Remove image and exit.
  --detach               Detach container.
  --exec string          Execute in container.
  --dry-run              Do nothing; echo docker commands.
  --verbose              Turn on verbose mode.
  --version              Print version.
  --help                 Print usage.
EOF
	exit 0
fi

if [[ "$1" != "shell" ]]
then
	DOSHELL="$1"
	export DOSHELL
fi

# Called as docker-shell shell
shift
exec dosh "$@"
